################################################## 
# PxSms_services_types.py 
# generated by ZSI.generate.wsdl2python
##################################################


import ZSI
import ZSI.TCcompound
from ZSI.schema import LocalElementDeclaration, ElementDeclaration, TypeDefinition, GTD, GED

##############################
# targetNamespace
# http://external.payex.com/PxSms/
##############################

class ns0:
    targetNamespace = "http://external.payex.com/PxSms/"

    class SendCpa_Dec(ZSI.TCcompound.ComplexType, ElementDeclaration):
        literal = "SendCpa"
        schema = "http://external.payex.com/PxSms/"
        def __init__(self, **kw):
            ns = ns0.SendCpa_Dec.schema
            TClist = [ZSI.TCnumbers.Ilong(pname=(ns,"accountNumber"), aname="_accountNumber", minOccurs=1, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"orderId"), aname="_orderId", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"productNumber"), aname="_productNumber", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"description"), aname="_description", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"originatingAddress"), aname="_originatingAddress", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"destination"), aname="_destination", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"userData"), aname="_userData", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"dataHeader"), aname="_dataHeader", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"price"), aname="_price", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"dcs"), aname="_dcs", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"validityTime"), aname="_validityTime", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"deliveryTime"), aname="_deliveryTime", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"hash"), aname="_hash", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded"))]
            kw["pname"] = ("http://external.payex.com/PxSms/","SendCpa")
            kw["aname"] = "_SendCpa"
            self.attribute_typecode_dict = {}
            ZSI.TCcompound.ComplexType.__init__(self,None,TClist,inorder=0,**kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self._accountNumber = None
                    self._orderId = None
                    self._productNumber = None
                    self._description = None
                    self._originatingAddress = None
                    self._destination = None
                    self._userData = None
                    self._dataHeader = None
                    self._price = None
                    self._dcs = None
                    self._validityTime = None
                    self._deliveryTime = None
                    self._hash = None
                    return
            Holder.__name__ = "SendCpa_Holder"
            self.pyclass = Holder

    class SendCpaResponse_Dec(ZSI.TCcompound.ComplexType, ElementDeclaration):
        literal = "SendCpaResponse"
        schema = "http://external.payex.com/PxSms/"
        def __init__(self, **kw):
            ns = ns0.SendCpaResponse_Dec.schema
            TClist = [ZSI.TC.String(pname=(ns,"SendCpaResult"), aname="_SendCpaResult", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded"))]
            kw["pname"] = ("http://external.payex.com/PxSms/","SendCpaResponse")
            kw["aname"] = "_SendCpaResponse"
            self.attribute_typecode_dict = {}
            ZSI.TCcompound.ComplexType.__init__(self,None,TClist,inorder=0,**kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self._SendCpaResult = None
                    return
            Holder.__name__ = "SendCpaResponse_Holder"
            self.pyclass = Holder

    class SendLa_Dec(ZSI.TCcompound.ComplexType, ElementDeclaration):
        literal = "SendLa"
        schema = "http://external.payex.com/PxSms/"
        def __init__(self, **kw):
            ns = ns0.SendLa_Dec.schema
            TClist = [ZSI.TCnumbers.Ilong(pname=(ns,"accountNumber"), aname="_accountNumber", minOccurs=1, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"orderId"), aname="_orderId", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"productNumber"), aname="_productNumber", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"description"), aname="_description", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"originatingAddress"), aname="_originatingAddress", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"addressAlpha"), aname="_addressAlpha", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"destination"), aname="_destination", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"userData"), aname="_userData", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"dataHeader"), aname="_dataHeader", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"dcs"), aname="_dcs", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"validityTime"), aname="_validityTime", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"deliveryTime"), aname="_deliveryTime", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"hash"), aname="_hash", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded"))]
            kw["pname"] = ("http://external.payex.com/PxSms/","SendLa")
            kw["aname"] = "_SendLa"
            self.attribute_typecode_dict = {}
            ZSI.TCcompound.ComplexType.__init__(self,None,TClist,inorder=0,**kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self._accountNumber = None
                    self._orderId = None
                    self._productNumber = None
                    self._description = None
                    self._originatingAddress = None
                    self._addressAlpha = None
                    self._destination = None
                    self._userData = None
                    self._dataHeader = None
                    self._dcs = None
                    self._validityTime = None
                    self._deliveryTime = None
                    self._hash = None
                    return
            Holder.__name__ = "SendLa_Holder"
            self.pyclass = Holder

    class SendLaResponse_Dec(ZSI.TCcompound.ComplexType, ElementDeclaration):
        literal = "SendLaResponse"
        schema = "http://external.payex.com/PxSms/"
        def __init__(self, **kw):
            ns = ns0.SendLaResponse_Dec.schema
            TClist = [ZSI.TC.String(pname=(ns,"SendLaResult"), aname="_SendLaResult", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded"))]
            kw["pname"] = ("http://external.payex.com/PxSms/","SendLaResponse")
            kw["aname"] = "_SendLaResponse"
            self.attribute_typecode_dict = {}
            ZSI.TCcompound.ComplexType.__init__(self,None,TClist,inorder=0,**kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self._SendLaResult = None
                    return
            Holder.__name__ = "SendLaResponse_Holder"
            self.pyclass = Holder

    class Check_Dec(ZSI.TCcompound.ComplexType, ElementDeclaration):
        literal = "Check"
        schema = "http://external.payex.com/PxSms/"
        def __init__(self, **kw):
            ns = ns0.Check_Dec.schema
            TClist = [ZSI.TCnumbers.Ilong(pname=(ns,"accountNumber"), aname="_accountNumber", minOccurs=1, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"transactionRef"), aname="_transactionRef", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname=(ns,"hash"), aname="_hash", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded"))]
            kw["pname"] = ("http://external.payex.com/PxSms/","Check")
            kw["aname"] = "_Check"
            self.attribute_typecode_dict = {}
            ZSI.TCcompound.ComplexType.__init__(self,None,TClist,inorder=0,**kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self._accountNumber = None
                    self._transactionRef = None
                    self._hash = None
                    return
            Holder.__name__ = "Check_Holder"
            self.pyclass = Holder

    class CheckResponse_Dec(ZSI.TCcompound.ComplexType, ElementDeclaration):
        literal = "CheckResponse"
        schema = "http://external.payex.com/PxSms/"
        def __init__(self, **kw):
            ns = ns0.CheckResponse_Dec.schema
            TClist = [ZSI.TC.String(pname=(ns,"CheckResult"), aname="_CheckResult", minOccurs=0, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded"))]
            kw["pname"] = ("http://external.payex.com/PxSms/","CheckResponse")
            kw["aname"] = "_CheckResponse"
            self.attribute_typecode_dict = {}
            ZSI.TCcompound.ComplexType.__init__(self,None,TClist,inorder=0,**kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self._CheckResult = None
                    return
            Holder.__name__ = "CheckResponse_Holder"
            self.pyclass = Holder

# end class ns0 (tns: http://external.payex.com/PxSms/)
