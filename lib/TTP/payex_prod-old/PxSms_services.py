################################################## 
# PxSms_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from PxSms_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

from time import gmtime, strftime

# Locator
class PxSmsLocator:
    PxSmsSoap_address = "https://external.payex.com/pxsms/pxsms.asmx"
    def getPxSmsSoapAddress(self):
        return PxSmsLocator.PxSmsSoap_address
    def getPxSmsSoap(self, url=None, **kw):
        return PxSmsSoapSOAP(url or PxSmsLocator.PxSmsSoap_address, **kw)

# Methods
class PxSmsSoapSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        
##        
        self._tracefileobj = open("/home/tore/payex_PxSmsSoapSOAP_trace.log", "a")
        kw['tracefile'] = self._tracefileobj
##       
        
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

##
    def __del__(self):
        self._tracefileobj.close()
##    

    # op: SendCpa
    def SendCpa(self, request):
        if isinstance(request, SendCpaSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://external.payex.com/PxSms/SendCpa", **kw)
        # no output wsaction
        response = self.binding.Receive(SendCpaSoapOut.typecode)
        return response

    # op: SendLa
    def SendLa(self, request):
        if isinstance(request, SendLaSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://external.payex.com/PxSms/SendLa", **kw)
        # no output wsaction
        response = self.binding.Receive(SendLaSoapOut.typecode)
        return response

    # op: Check
    def Check(self, request):
        if isinstance(request, CheckSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://external.payex.com/PxSms/Check", **kw)

##        
        PAYEX_DEBUG_LOG = open("/home/tore/payex_check.log", "a")
        PAYEX_DEBUG_LOG.write("%s: PxSms_services.py Check()\n" % strftime("%Y-%b-%d %H:%M:%S", gmtime()));
        PAYEX_DEBUG_LOG.close()
##
        
        # no output wsaction
        response = self.binding.Receive(CheckSoapOut.typecode)
        return response

SendCpaSoapIn = ns0.SendCpa_Dec().pyclass

SendCpaSoapOut = ns0.SendCpaResponse_Dec().pyclass

SendLaSoapIn = ns0.SendLa_Dec().pyclass

SendLaSoapOut = ns0.SendLaResponse_Dec().pyclass

CheckSoapIn = ns0.Check_Dec().pyclass

CheckSoapOut = ns0.CheckResponse_Dec().pyclass
