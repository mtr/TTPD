#! /bin/sh
#
# $Id: post-install.sh.in 271 2007-06-06 12:34:42Z mtr $
#
# Copyright (C) 2007, 2009 by Martin Thorsen Ranang
#

lock_dir=@pkglockdir@
log_dir=@pkglogdir@
run_dir=@pkgrundir@

main_init_script=@pkginitdir@/@PACKAGE_TARNAME@
ttpd_log_file=@pkglogdir@/@PACKAGE_TARNAME@.log

ttpd_user=ttpd
ttpd_group=ttpd

mysql_debian_cfg=/etc/mysql/debian.cnf
mysql_init_script=@initdir@/mysql
mysql="@bindir@/mysql --defaults-file=$mysql_debian_cfg"

sms_statistics_export_dir=@sms_statistics_export_dir@
web_statistics_export_dir=@web_statistics_export_dir@

makedir() {
    if [ ! -d $1 ]; then
	mkdir $1
    fi
    chown $2 $1 && chmod $3 $1
}

setup_mysql() {
    # Setup necessary MySQL account.
    if $mysql_init_script status ; then
            # MySQL is running.
        mysql_address=$(cat /etc/default/ttpd |grep 'db_address' -)
        
        mysql_user=$(echo $mysql_address \
    	    |sed 's/.*\/\/\([^:]*\):.*/\1/g' -)
        mysql_password=$(echo $mysql_address \
    	    |sed 's/.*\/\/[^:]*:\([^@]*\)@.*/\1/g' -)
        mysql_host=$(echo $mysql_address \
    	    |sed 's/.*\/\/[^@]*@\([^/]*\).*/\1/g' -)
        mysql_db=$(echo $mysql_address \
    	    |sed 's/.*\/\/[^/]*\/\(\w*\).*/\1/g' -)
        
        # Create database.
	echo "Creating database '$mysql_db' if it does not exist."
	$mysql <<EOF
create database if not exists $mysql_db;
EOF
        
	res=$(sudo mysql --defaults-file=/etc/mysql/debian.cnf << EOF 
select user from mysql.user where user = '$mysql_user' and host = '$mysql_host';
EOF
	) 
	if echo $res |grep -q "user $mysql_user"; then
	    # User already exists.
	    echo "The user '$mysql_user'@'$mysql_host' already exists.  " \
		"Not creating it.";
	else
            # Create user.
	    echo "Creating the user '$mysql_user'@'$mysql_host'."
	    $mysql <<EOF
create user '$mysql_user'@'$mysql_host' identified by '$mysql_password';
EOF
            # Grant privileges to user.
	    echo "Granting privileges to '$mysql_user'@'$mysql_host'."
	    $mysql <<EOF
grant select,insert,update,delete,create,drop,index
on $mysql_db.* to '$mysql_user'@'$mysql_host';
EOF
	fi
    else
        # MySQL is not running.
        echo "Since no running MySQL instance could be found, please " \
    	    "manually create a database where the TTPD should store " \
    	    "billing information.  Afterwards update the configuration " \
    	    "in /etc/defaults/ttpd accordingly."
    fi
}

# Make sure that the ttpd user exists.  Simplest portable way to check
# is to chown something, so we'll create the directories that we need
# here.
makedir $log_dir         root:root 755
chgrp $ttpd_group $log_dir 2>/dev/null \
    || addgroup --system $ttpd_group
chown $ttpd_user $log_dir 2>/dev/null \
    || adduser --system --no-create-home \
       --disabled-password --ingroup $ttpd_group $ttpd_user

# Need to have ttpd in the right group, but old revs do it wrong.
if [ "$(id -gn $ttpd_user)" != "$ttpd_group" ]; then
    usermod -g $ttpd_user $ttpd_group
fi

chown $ttpd_user:adm $log_dir

makedir $run_dir         $ttpd_user:root 755
makedir $lock_dir        $ttpd_user:root 755

# Make sure the init script is executable.
chmod 755 $main_init_script

# Make sure the files have the right ownership and permissions.
for file in $ttpd_log_file; do
    touch $file
    chown $ttpd_user:adm $file
    chmod 664 $file
done

if [ -x /usr/sbin/update-rc.d ]; then
    /usr/sbin/update-rc.d @PACKAGE_TARNAME@ defaults
elif [ -x /usr/lib/lsb/install_initd ]; then
    /usr/lib/lsb/install_initd $main_init_script
elif [ -x /sbin/chkconfig ]; then
    /sbin/chkconfig --add @PACKAGE_TARNAME@
else
    for i in 2 3 4 5; do
	ln -sf $main_init_script /etc/rc.d/rc${i}.d/S90@PACKAGE_TARNAME@
    done
    for i in 1 6; do
        ln -sf $main_init_script /etc/rc.d/rc${i}.d/K10@PACKAGE_TARNAME@
    done
fi

# Setup MySQL database and account, if necessary.
if [ ! -r $mysql_debian_cfg ]; then
    echo "Cannot read the file '$mysql_debian_cfg'; " \
	"skipping database setup."
else
    setup_mysql
fi

# Restart TTPD daemon.
INIT_VERBOSE=yes $main_init_script restart


# Install (new default) Web site.
# ===============================

# Get Apache 'run as' user and group names.
. /etc/apache2/envvars

if [ -z "$APACHE_RUN_USER" ]; then
    APACHE_RUN_USER=www-data	# Default assumption.
fi

if [ -z "$APACHE_RUN_GROUP" ]; then
    APACHE_RUN_GROUP=www-data	# Default assumption.
fi

makedir $sms_statistics_export_dir 	$APACHE_RUN_USER:$APACHE_RUN_GROUP 775
makedir $sms_statistics_export_dir/graphics	$APACHE_RUN_USER:$APACHE_RUN_GROUP 775
makedir $web_statistics_export_dir	$APACHE_RUN_USER:$APACHE_RUN_GROUP 775
makedir $web_statistics_export_dir/graphics	$APACHE_RUN_USER:$APACHE_RUN_GROUP 775

for dir in $(find @www_document_root@ -type d ); do
    chown $APACHE_RUN_USER:$APACHE_RUN_GROUP $dir
    chmod 775 $dir
done

for file in $(find @www_document_root@ -type f ); do
    chown $APACHE_RUN_USER:$APACHE_RUN_GROUP $file
    chmod 664 $file
done

# tt_extra=@www_document_root@/team_trafikk

# chown $APACHE_RUN_USER:$APACHE_RUN_GROUP $tt_extra
# chmod 775 $tt_extra

# for file in $tt_extra/*; do
#     chown $APACHE_RUN_USER:$APACHE_RUN_GROUP $file
#     chmod 664 $file
# done

a2dissite default		# Disable the default Web site.
a2ensite @lingit_web_site@	# Enable TTPD's Web site.

a2enmod php5	       # Make sure the php5 module is already enabled.
a2enmod rewrite	       # Make sure the rewrite module is already enabled.

/etc/init.d/apache2 reload	# Reload Apache2 configuration.
